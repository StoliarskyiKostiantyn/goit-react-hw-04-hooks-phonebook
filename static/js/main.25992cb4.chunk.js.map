{"version":3,"sources":["Components/Phonebook.js","Components/ContactList.js","Components/Filter.js","App.js","index.js"],"names":["Phonebook","onSubmit","useState","name","setName","phone","setPhone","handleChange","e","target","value","preventDefault","type","pattern","onChange","title","required","ContactList","this","props","contactitems","map","contactitem","onClick","onDeleteContact","id","Component","Filter","App","contacts","setContacts","filterValue","setFilterValue","visibleContact","normalizaedFilter","toLowerCase","filter","contact","includes","getVisibleContact","data","item","shortid","generate","prevState","currentTarget","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8RAEe,SAASA,EAAT,GAAkC,IAAbC,EAAY,EAAZA,SAClC,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACMC,EAAe,SAACC,GACpB,MAAwBA,EAAEC,OAAlBN,EAAR,EAAQA,KAAMO,EAAd,EAAcA,MACd,OAAQP,GACN,IAAK,OACHC,EAAQM,GACR,MACF,IAAK,QACHJ,EAASI,GACT,MACF,QACE,SAaN,OACE,mCACE,uBAAMT,SARW,SAACO,GACpBA,EAAEG,iBACFV,EAAS,CAAEE,OAAME,UALjBD,EAAQ,IACRE,EAAS,KAUP,UACE,uDAEE,uBACEM,KAAK,OACLT,KAAK,OACLU,QAAQ,yHACRH,MAAOP,EACPW,SAAUP,EACVQ,MAAM,kcACNC,UAAQ,IATZ,QAYE,uBACEJ,KAAK,OACLT,KAAK,QACLO,MAAOL,EACPS,SAAUP,EACVQ,MAAM,kcACNC,UAAQ,OAGZ,wBAAQJ,KAAK,SAAb,8B,kCClDFK,E,4JACJ,WAAU,IAAD,OACP,OACE,mCACE,8BACE,6BACGC,KAAKC,MAAMC,aAAaC,KAAI,SAACC,GAAD,OAC3B,+BACE,yCACQA,EAAYnB,KADpB,UACiCmB,EAAYjB,SAE7C,wBACEO,KAAK,SACLW,QAAS,kBAAM,EAAKJ,MAAMK,gBAAgBF,EAAYG,KAFxD,0DAJOH,EAAYG,iB,GAPTC,aA6BXT,IC7BA,SAASU,EAAT,GAAsC,IAApBjB,EAAmB,EAAnBA,MAAOI,EAAY,EAAZA,SACtC,OACE,yEACQ,uBAAOF,KAAK,OAAOF,MAAOA,EAAOI,SAAUA,O,qBCCxC,SAASc,IACtB,MAAgC1B,mBAAS,CACvC,CAAEuB,GAAI,OAAQtB,KAAM,gBAAiBE,MAAO,aAC5C,CAAEoB,GAAI,OAAQtB,KAAM,iBAAkBE,MAAO,aAC7C,CAAEoB,GAAI,OAAQtB,KAAM,gBAAiBE,MAAO,aAC5C,CAAEoB,GAAI,OAAQtB,KAAM,iBAAkBE,MAAO,eAJ/C,mBAAOwB,EAAP,KAAiBC,EAAjB,KAMA,EAAsC5B,mBAAS,IAA/C,mBAAO6B,EAAP,KAAoBC,EAApB,KAsBMC,EAXoB,WACxB,IAAMC,EAAoBH,EAAYI,cACtC,OAAON,EAASO,QAAO,SAACC,GAAD,OACrBA,EAAQlC,KAAKgC,cAAcG,SAASJ,MAQjBK,GACvB,OACE,qCACE,2CACA,cAACvC,EAAD,CAAWC,SAzBS,SAACuC,GACvB,IAAMC,EAAI,aACRhB,GAAIiB,IAAQC,YACTH,GAELV,GAAY,SAACc,GAAD,4BAAmBA,GAAnB,CAA8BH,UAqBxC,cAACd,EAAD,CAAQjB,MAAOqB,EAAajB,SAnBT,SAACN,GACtBwB,EAAexB,EAAEqC,cAAcnC,UAmB7B,0CACA,cAAC,EAAD,CACEU,aAAca,EACdT,gBAdkB,SAACC,GACvBK,GAAY,SAACc,GAAD,MAAgB,CAC1Bf,SAAUe,EAAUf,SAASO,QAAO,SAACC,GAAD,OAAaA,EAAQZ,KAAOA,eC1BtEqB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.25992cb4.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nexport default function Phonebook({ onSubmit }) {\r\n  const [name, setName] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n      case \"phone\":\r\n        setPhone(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n  const reset = () => {\r\n    setName(\"\");\r\n    setPhone(\"\");\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    onSubmit({ name, phone });\r\n    reset();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit}>\r\n        <label>\r\n          Имя\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            value={name}\r\n            onChange={handleChange}\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n          Phone\r\n          <input\r\n            type=\"text\"\r\n            name=\"phone\"\r\n            value={phone}\r\n            onChange={handleChange}\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n        <button type=\"submit\">Add contact</button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\nPhonebook.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nclass ContactList extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <div>\r\n          <ul>\r\n            {this.props.contactitems.map((contactitem) => (\r\n              <li key={contactitem.id}>\r\n                <span>\r\n                  Name:{contactitem.name} Phone:{contactitem.phone}\r\n                </span>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => this.props.onDeleteContact(contactitem.id)}\r\n                >\r\n                  Удалить\r\n                </button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nContactList.propTypes = {\r\n  name: PropTypes.string,\r\n  phone: PropTypes.string,\r\n};\r\nexport default ContactList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nexport default function Filter({ value, onChange }) {\r\n  return (\r\n    <label>\r\n      Фильтр<input type=\"text\" value={value} onChange={onChange}></input>\r\n    </label>\r\n  );\r\n}\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n","import \"./App.css\";\r\nimport Phonebook from \"./Components/Phonebook\";\r\nimport React, { useState } from \"react\";\r\nimport ContactList from \"./Components/ContactList\";\r\nimport Filter from \"./Components/Filter\";\r\nimport shortid from \"shortid\";\r\nexport default function App() {\r\n  const [contacts, setContacts] = useState([\r\n    { id: \"id-1\", name: \"Rosie Simpson\", phone: \"459-12-56\" },\r\n    { id: \"id-2\", name: \"Hermione Kline\", phone: \"443-89-12\" },\r\n    { id: \"id-3\", name: \"Eden Clements\", phone: \"645-17-79\" },\r\n    { id: \"id-4\", name: \"Annie Copeland\", phone: \"227-91-26\" },\r\n  ]);\r\n  const [filterValue, setFilterValue] = useState(\"\");\r\n  const forSubmiHandler = (data) => {\r\n    const item = {\r\n      id: shortid.generate(),\r\n      ...data,\r\n    };\r\n    setContacts((prevState) => [...prevState, item]);\r\n  };\r\n  const onFilterChange = (e) => {\r\n    setFilterValue(e.currentTarget.value);\r\n  };\r\n  const getVisibleContact = () => {\r\n    const normalizaedFilter = filterValue.toLowerCase();\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(normalizaedFilter)\r\n    );\r\n  };\r\n  const onDeleteContact = (id) => {\r\n    setContacts((prevState) => ({\r\n      contacts: prevState.contacts.filter((contact) => contact.id !== id),\r\n    }));\r\n  };\r\n  const visibleContact = getVisibleContact();\r\n  return (\r\n    <>\r\n      <h1>Phonebook</h1>\r\n      <Phonebook onSubmit={forSubmiHandler}></Phonebook>\r\n      <Filter value={filterValue} onChange={onFilterChange} />\r\n      <h2>Contacts</h2>\r\n      <ContactList\r\n        contactitems={visibleContact}\r\n        onDeleteContact={onDeleteContact}\r\n      ></ContactList>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}